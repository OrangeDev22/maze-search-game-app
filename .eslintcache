[{"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\index.js":"1","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\reportWebVitals.js":"2","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\App.js":"3","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\MainPage.js":"4","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\contexts\\GamesProvider.js":"5","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\contexts\\AppProvider.js":"6","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\TrendingDate.js":"7","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\SearchGame.js":"8","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\GameDetails.js":"9","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Navbar.js":"10","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\axios.js":"11","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\GamesList.js":"12","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Loading.js":"13","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Gamemeta.js":"14","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Stores.js":"15","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\ScreenshotsSlider.js":"16","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\ImageSlider.js":"17","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\GameAbout.js":"18","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\GameDetailsCard.js":"19","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\TemporaryDrawer.js":"20","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Gamecard.js":"21"},{"size":494,"mtime":1635649173003,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1635649173004,"results":"24","hashOfConfig":"23"},{"size":2684,"mtime":1673274835574,"results":"25","hashOfConfig":"23"},{"size":2059,"mtime":1635649173003,"results":"26","hashOfConfig":"23"},{"size":505,"mtime":1654395203903,"results":"27","hashOfConfig":"23"},{"size":692,"mtime":1635649173000,"results":"28","hashOfConfig":"23"},{"size":2942,"mtime":1654395266077,"results":"29","hashOfConfig":"23"},{"size":1458,"mtime":1635649173004,"results":"30","hashOfConfig":"23"},{"size":5155,"mtime":1654395256722,"results":"31","hashOfConfig":"23"},{"size":6613,"mtime":1654395196784,"results":"32","hashOfConfig":"23"},{"size":135,"mtime":1635649172995,"results":"33","hashOfConfig":"23"},{"size":2022,"mtime":1635649172998,"results":"34","hashOfConfig":"23"},{"size":458,"mtime":1635649172998,"results":"35","hashOfConfig":"23"},{"size":3878,"mtime":1635649172997,"results":"36","hashOfConfig":"23"},{"size":2367,"mtime":1654395195848,"results":"37","hashOfConfig":"23"},{"size":2159,"mtime":1635649172999,"results":"38","hashOfConfig":"23"},{"size":4341,"mtime":1635649172998,"results":"39","hashOfConfig":"23"},{"size":1104,"mtime":1635649172996,"results":"40","hashOfConfig":"23"},{"size":2453,"mtime":1635649172996,"results":"41","hashOfConfig":"23"},{"size":2994,"mtime":1635649172999,"results":"42","hashOfConfig":"23"},{"size":6914,"mtime":1635649172997,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"zraoa8",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\index.js",[],["93","94"],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\reportWebVitals.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\App.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\MainPage.js",["95","96"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport ImageSLider from \"../components/ImageSlider\";\r\nimport GamesList from \"../components/GamesList\";\r\nimport { useGames } from \"../contexts/GamesProvider\";\r\nimport { useApp } from \"../contexts/AppProvider\";\r\nimport Loading from \"../components/Loading\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GAME_RAWG_API_KEY;\r\n\r\nfunction MainPage() {\r\n  const location = useLocation();\r\n  const currentLocation = location.pathname;\r\n  const { games, setGames, page, setPage } = useGames();\r\n  const [loading, setLoading] = useState(true);\r\n  const pageSize = 20;\r\n  const { screenWidth } = useApp();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      axios\r\n        .get(\"/games/lists/main\", {\r\n          params: {\r\n            ordering: \"-relevance\",\r\n            discover: true,\r\n            page_size: pageSize,\r\n            page,\r\n            key: API_KEY,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setGames((prev) => [...prev, ...res.data.results]);\r\n        })\r\n        .catch((error) => console.error(error))\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n    if (loading && page > 1) {\r\n      setPage(1);\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [page, setGames]);\r\n\r\n  useEffect(() => {\r\n    if (!currentLocation) return;\r\n\r\n    return () => {\r\n      setGames([]);\r\n    };\r\n  }, [currentLocation, setPage]);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div>\r\n      {screenWidth > 979 && (\r\n        <ImageSLider games={games.slice(0, 7)} key=\"ImageSlider\" />\r\n      )}\r\n      <div\r\n        style={{\r\n          margin: `${screenWidth > 979 ? \"1em 0 \" : \"4px 0\"}`,\r\n          padding: `${screenWidth > 979 ? \" 1em 0\" : \"4px 0 \"}`,\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <h2>Top trending games</h2>\r\n      </div>\r\n      <GamesList games={games} key=\"GamesList\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MainPage);\r\n","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\contexts\\GamesProvider.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\contexts\\AppProvider.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\TrendingDate.js",["97"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useGames } from \"../contexts/GamesProvider\";\r\nimport GamesList from \"../components/GamesList\";\r\nimport axios from \"../axios\";\r\nimport Loading from \"../components/Loading\";\r\nconst API_KEY = process.env.REACT_APP_GAME_RAWG_API_KEY;\r\nfunction TrendingDate() {\r\n  const { time } = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const currentLocation = location.pathname;\r\n  const [limitDate, setLimitDate] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const pageSize = 20;\r\n  const { games, setGames, page, setPage } = useGames();\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const today = new Date();\r\n    let pastDate = new Date();\r\n    switch (time) {\r\n      case \"this-week\":\r\n        pastDate.setDate(today.getDate() - 7);\r\n        setLimitDate(`${formatDate(pastDate)},${formatDate(today)}`);\r\n        setTitle(\"Popular this week\");\r\n        break;\r\n      case \"last-month\":\r\n        pastDate.setDate(today.getDate() - 30);\r\n        setLimitDate(`${formatDate(pastDate)},${formatDate(today)}`);\r\n        setTitle(\"Popular last month\");\r\n        break;\r\n      case \"last-year\":\r\n        const lastYear = today.getFullYear() - 1;\r\n        setLimitDate(`${lastYear}-01-31,${lastYear}-12-31`);\r\n        setTitle(\"Popular last year\");\r\n        break;\r\n      default:\r\n        history.push(\"/\");\r\n        break;\r\n    }\r\n  }, [time, history]);\r\n\r\n  useEffect(() => {\r\n    function fetchData() {\r\n      if (limitDate) {\r\n        axios\r\n          .get(\"/games\", {\r\n            params: {\r\n              ordering: \"-relevance\",\r\n              page,\r\n              page_size: pageSize,\r\n              dates: limitDate,\r\n              key: API_KEY,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            setGames((prev) => [...prev, ...response.data.results]);\r\n          })\r\n          .finally(() => setLoading(false));\r\n      }\r\n    }\r\n    if (loading && page > 1) {\r\n      setPage(1);\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [limitDate, page, setGames]);\r\n\r\n  useEffect(() => {\r\n    if (!currentLocation) return;\r\n\r\n    return () => {\r\n      setGames([]);\r\n    };\r\n  }, [currentLocation, setGames, setPage]);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: \"center\", margin: \"8px 0\" }}>\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <GamesList games={games} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TrendingDate);\r\n","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\SearchGame.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\pages\\GameDetails.js",["98"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport Stores from \"../components/Stores\";\r\nimport axios from \"../axios\";\r\nimport \"../css/GameDetails.css\";\r\nimport Gamemeta from \"../components/Gamemeta\";\r\nimport ScreenshotsSlider from \"../components/ScreenshotsSlider\";\r\nimport GameAbout from \"../components/GameAbout\";\r\nimport GameDetailsCard from \"../components/GameDetailsCard\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GAME_RAWG_API_KEY;\r\n\r\nfunction GameDetails() {\r\n  const { rawId } = useParams();\r\n  const [primaryDetails, setPrimary] = useState(null);\r\n  const [screenshots, setScreenshots] = useState([]);\r\n  const [suggestedGames, setSuggestedGames] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rating, setRating] = useState(null);\r\n  const [releaseDate, setReleaseDate] = useState(null);\r\n  const [developer, setDeveloper] = useState(\"Not available\");\r\n  const [publisher, setPublisher] = useState(\"Not available\");\r\n  const [ageRating, setAgeRating] = useState(\"Not rated yet\");\r\n  const [metascore, setMetascore] = useState(null);\r\n  const [website, setWebsite] = useState(\"\");\r\n  const isMounted = useRef(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fetchGameData = () => {\r\n      axios\r\n        .get(`/games/${rawId}`, {\r\n          params: {\r\n            key: API_KEY,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          response.status === 200 && setPrimary(response.data);\r\n          axios\r\n            .get(`/games/${rawId}/screenshots`, {\r\n              params: {\r\n                key: API_KEY,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              setScreenshots(response.data.results);\r\n              axios\r\n                .get(`/games/${rawId}/suggested`, {\r\n                  params: {\r\n                    key: API_KEY,\r\n                    page_size: 8,\r\n                  },\r\n                })\r\n                .then((response) => {\r\n                  setSuggestedGames(response.data.results);\r\n                })\r\n                .finally(() => {\r\n                  if (isMounted.current) {\r\n                    setLoading(false);\r\n                  }\r\n                });\r\n            });\r\n        })\r\n        .catch(() => history.push(\"/\"));\r\n    };\r\n    fetchGameData();\r\n    return () => {\r\n      setRating(null);\r\n      setReleaseDate(null);\r\n      setDeveloper(\"Not available\");\r\n      setPublisher(\"Not available\");\r\n      setAgeRating(\"Not available\");\r\n      setMetascore(null);\r\n      setWebsite(\"\");\r\n      setSuggestedGames(null);\r\n    };\r\n  }, [rawId, history]);\r\n\r\n  useEffect(() => {\r\n    if (primaryDetails) {\r\n      primaryDetails.rating && setRating(primaryDetails.rating);\r\n      primaryDetails.released && setReleaseDate(primaryDetails.released);\r\n      primaryDetails.developers.length > 0 &&\r\n        setDeveloper(primaryDetails.developers[0].name);\r\n      primaryDetails.publishers.length > 0 &&\r\n        setPublisher(primaryDetails.publishers[0].name);\r\n      primaryDetails.esrb_rating &&\r\n        setAgeRating(primaryDetails.esrb_rating.name);\r\n      primaryDetails.metacritic && setMetascore(primaryDetails.metacritic);\r\n      primaryDetails.website && setWebsite(primaryDetails.website);\r\n    }\r\n  }, [primaryDetails]);\r\n\r\n  if (loading) return <Loading />;\r\n  return (\r\n    <div className=\"game_details\">\r\n      <div className=\"game_details_wrapper\">\r\n        <div className=\"game_title\">\r\n          <h1 style={{ fontWeight: \"normal\" }}>{primaryDetails.name}</h1>\r\n        </div>\r\n        <div className=\"game_details_screenshots\">\r\n          <ScreenshotsSlider screenshots={screenshots} />\r\n        </div>\r\n        <GameDetailsCard\r\n          background_image={primaryDetails.background_image}\r\n          rating={rating}\r\n          genres={primaryDetails.genres}\r\n          releaseDate={releaseDate}\r\n          developer={developer}\r\n          publisher={publisher}\r\n        />\r\n      </div>\r\n      <GameAbout about={primaryDetails.description_raw} />\r\n      <div className=\"game_details_meta\">\r\n        <Gamemeta\r\n          metaDetails={primaryDetails}\r\n          metascore={metascore}\r\n          releaseDate={releaseDate}\r\n          publisher={publisher}\r\n          website={website}\r\n          ageRating={ageRating}\r\n          developer={developer}\r\n        />\r\n        <Stores stores={primaryDetails.stores} gameId={rawId} />\r\n      </div>\r\n      {/* API End point only available for payed users */}\r\n      {/* <div className=\"game_details_suggested_games\">\r\n        <div style={{ textAlign: \"center\", margin: \"1em 0 1em 0\" }}>\r\n          <h2>Similar titles</h2>\r\n        </div>\r\n        {console.log(\"--suggestedGames\", suggestedGames)}\r\n        {suggestedGames && (\r\n          <GamesList games={suggestedGames} disableFetchMore={true} />\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameDetails;\r\n","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Navbar.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\axios.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\GamesList.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Loading.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Gamemeta.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Stores.js",["99"],"import axios from \"../axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FaSteam, FaPlaystation, FaXbox } from \"react-icons/fa\";\r\nimport { SiGogDotCom, SiNintendo, SiEpicgames } from \"react-icons/si\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GAME_RAWG_API_KEY;\r\n\r\nfunction Stores({ stores, gameId }) {\r\n  const [storesState, setStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/games/${gameId}/stores`, {\r\n        params: {\r\n          key: API_KEY,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const storesWithUrls = response.data.results;\r\n        if (storesWithUrls) {\r\n          setStores(() =>\r\n            stores.map((store) => ({\r\n              ...store,\r\n              url: storesWithUrls.find(\r\n                (storeWithUrl) => storeWithUrl.id === store.id\r\n              ).url,\r\n            }))\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"--error\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"stores_container\">\r\n      <h2>Available stores</h2>\r\n      <div className=\"stores\">\r\n        {storesState.length > 0 &&\r\n          storesState.map((store, index) => (\r\n            <a\r\n              key={index}\r\n              href={store.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <div className=\"store_wrapper\">\r\n                <p style={{ margin: 0 }}>{store.store.name}</p>\r\n                {store.store.name.toLowerCase() === \"steam\" && (\r\n                  <FaSteam size={18} />\r\n                )}\r\n                {store.store.name.toLowerCase() === \"playstation store\" && (\r\n                  <FaPlaystation size={18} />\r\n                )}\r\n                {store.store.name.toLowerCase() === \"gog\" && (\r\n                  <SiGogDotCom size={18} />\r\n                )}\r\n                {store.store.name.toLowerCase() === \"xbox store\" && (\r\n                  <FaXbox size={18} />\r\n                )}\r\n                {store.store.name.toLowerCase() === \"nintendo store\" && (\r\n                  <SiNintendo size={18} />\r\n                )}\r\n                {store.store.name.toLowerCase() === \"epic games\" && (\r\n                  <SiEpicgames size={18} />\r\n                )}\r\n              </div>\r\n            </a>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stores;\r\n","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\ScreenshotsSlider.js",["100"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport \"../css/Screenshots.css\";\r\n\r\nconst ScreenshotsSlider = ({ screenshots }) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [sliderTimeout, setSliderTimeout] = useState(0);\r\n\r\n  const nextSlide = useCallback(() => {\r\n    setCurrent(current === screenshots.length - 1 ? 0 : current + 1);\r\n  }, [current, screenshots.length]);\r\n\r\n  useEffect(() => {\r\n    const setInfiniteSliderTimeout = () => {\r\n      if (sliderTimeout) {\r\n        clearTimeout(sliderTimeout);\r\n      }\r\n      setSliderTimeout(\r\n        setTimeout(function () {\r\n          nextSlide();\r\n        }, 5000)\r\n      );\r\n    };\r\n    setInfiniteSliderTimeout();\r\n    return () => {\r\n      setSliderTimeout(0);\r\n    };\r\n  }, [current]);\r\n\r\n  return (\r\n    <div className=\"screenshot_slider\" key=\"slider\">\r\n      <div className=\"screenshot_slider_wrapper\">\r\n        {screenshots &&\r\n          screenshots.map((screenshot, index) => (\r\n            <div\r\n              className={`screenshot_slider_image_container ${\r\n                index === current && \"screenshot_active\"\r\n              } ${index !== current ? \"hide\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              <div className=\"screenshot_holder\">\r\n                <img\r\n                  className={`screenshot_slider_image`}\r\n                  src={screenshot.image}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div style={{ position: \"relative\", width: \"100%\", height: \"86px\" }}>\r\n        <div className=\"screenshots_preview_container\">\r\n          {screenshots.map((screenshot, index) => (\r\n            <div\r\n              className={`screenshot_preview_wrapper ${\r\n                current === index ? \"selected\" : \"unselected\"\r\n              }`}\r\n              key={`screenshot_preview_${index}`}\r\n              onClick={() => setCurrent(index)}\r\n            >\r\n              <img key={index} src={screenshot.image} alt=\"\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ScreenshotsSlider);\r\n","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\ImageSlider.js",["101"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Slider.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { FaXbox, FaWindows, FaPlaystation } from \"react-icons/fa\";\r\nimport { SiNintendoswitch } from \"react-icons/si\";\r\nimport { useGames } from \"../contexts/GamesProvider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectedThumb: {\r\n    background: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst ImageSlider = ({ games, screenshots }) => {\r\n  const { setGames, setPage } = useGames();\r\n  const [current, setCurrent] = useState(0);\r\n  const [sliderTimeout, setSliderTimeout] = useState(0);\r\n  const classes = useStyles();\r\n\r\n  const setInfiniteSliderTimeout = () => {\r\n    if (sliderTimeout) {\r\n      clearTimeout(sliderTimeout);\r\n    }\r\n    setSliderTimeout(\r\n      setTimeout(function () {\r\n        nextSlide();\r\n      }, 5000)\r\n    );\r\n  };\r\n\r\n  const nextSlide = useCallback(() => {\r\n    setCurrent(current === games.length - 1 ? 0 : current + 1);\r\n  }, [current, games.length]);\r\n\r\n  const prevSlide = useCallback(() => {\r\n    setCurrent(current === 0 ? games.length - 1 : current - 1);\r\n  }, [current, games.length]);\r\n\r\n  useEffect(() => {\r\n    setInfiniteSliderTimeout();\r\n    return () => {\r\n      setSliderTimeout(0);\r\n    };\r\n  }, [current]);\r\n\r\n  return (\r\n    <div className=\"slider\" key=\"slider\">\r\n      <div className=\"slider_wrapper\">\r\n        <IconButton color=\"secondary\" size=\"medium\" onClick={prevSlide}>\r\n          <ArrowBackIosIcon fontSize=\"large\" color=\"secondary\" />\r\n        </IconButton>\r\n\r\n        {games &&\r\n          games.map((game, index) => (\r\n            <Link\r\n              onClick={() => {\r\n                setGames([]);\r\n                setPage(1);\r\n              }}\r\n              to={`/games/${game.id}/${game.name}`}\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              key={`slider_image_${index}`}\r\n            >\r\n              <div\r\n                className={`slider_image_container ${\r\n                  index === current && \"active\"\r\n                } ${index !== current ? \"hide\" : \"\"}`}\r\n              >\r\n                <img\r\n                  className={`slider_image`}\r\n                  src={game.background_image}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"game_details_header\">\r\n                  <h2 className=\"game_title\" style={{ marginBottom: \"0.5em\" }}>\r\n                    {game.name}\r\n                  </h2>\r\n                  <div className=\"platforms_container\">\r\n                    {game.parent_platforms.map((platform, index) => {\r\n                      const platformToShow = platform.platform.name.toLowerCase();\r\n                      return (\r\n                        <div\r\n                          className=\"platform_image\"\r\n                          key={`slider_platform_image_${index}`}\r\n                        >\r\n                          {platformToShow === \"xbox\" && <FaXbox size={32} />}\r\n                          {platformToShow === \"pc\" && <FaWindows size={32} />}\r\n                          {platformToShow === \"playstation\" && (\r\n                            <FaPlaystation size={32} />\r\n                          )}\r\n                          {platformToShow === \"nintendo\" && (\r\n                            <SiNintendoswitch size={32} />\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        <IconButton color=\"secondary\" size=\"medium\" onClick={nextSlide}>\r\n          <ArrowForwardIosIcon fontSize=\"large\" color=\"secondary\" />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"slider_thumbs\">\r\n        {games.map((game, index) => (\r\n          <div\r\n            key={`slider_thumb_${index}`}\r\n            className={`slider_thumb ${\r\n              index === current && classes.selectedThumb\r\n            }`}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageSlider);\r\n","C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\GameAbout.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\GameDetailsCard.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\TemporaryDrawer.js",[],"C:\\Users\\Gabriel\\Documents\\Github\\maze search game\\src\\components\\Gamecard.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":45,"column":6,"nodeType":"108","endLine":45,"endColumn":22,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":53,"column":6,"nodeType":"108","endLine":53,"endColumn":32,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"107","line":81,"column":6,"nodeType":"108","endLine":81,"endColumn":33,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":18,"column":10,"nodeType":"115","messageId":"116","endLine":18,"endColumn":24},{"ruleId":"106","severity":1,"message":"117","line":32,"column":6,"nodeType":"108","endLine":32,"endColumn":8,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"119","line":27,"column":6,"nodeType":"108","endLine":27,"endColumn":15,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"121","line":48,"column":6,"nodeType":"108","endLine":48,"endColumn":15,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading' and 'setPage'. Either include them or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'setGames'. Either include it or remove the dependency array.",["126"],["127"],"no-unused-vars","'suggestedGames' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'gameId' and 'stores'. Either include them or remove the dependency array. If 'setStores' needs the current value of 'stores', you can also switch to useReducer instead of useState and read 'stores' in the reducer.",["128"],"React Hook useEffect has missing dependencies: 'nextSlide' and 'sliderTimeout'. Either include them or remove the dependency array.",["129"],"React Hook useEffect has a missing dependency: 'setInfiniteSliderTimeout'. Either include it or remove the dependency array.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [loading, page, setGames, setPage]",{"range":"143","text":"144"},"Update the dependencies array to be: [currentLocation, setGames, setPage]",{"range":"145","text":"146"},"Update the dependencies array to be: [limitDate, loading, page, setGames, setPage]",{"range":"147","text":"148"},"Update the dependencies array to be: [gameId, stores]",{"range":"149","text":"150"},"Update the dependencies array to be: [current, nextSlide, sliderTimeout]",{"range":"151","text":"152"},"Update the dependencies array to be: [current, setInfiniteSliderTimeout]",{"range":"153","text":"154"},[1346,1362],"[loading, page, setGames, setPage]",[1480,1506],"[currentLocation, setGames, setPage]",[2492,2519],"[limitDate, loading, page, setGames, setPage]",[962,964],"[gameId, stores]",[765,774],"[current, nextSlide, sliderTimeout]",[1524,1533],"[current, setInfiniteSliderTimeout]"]