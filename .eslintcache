[{"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\index.js":"1","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\reportWebVitals.js":"2","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\App.js":"3","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\contexts\\GamesProvider.js":"4","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\contexts\\AppProvider.js":"5","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\MainPage.js":"6","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\TrendingDate.js":"7","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\SearchGame.js":"8","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\GameDetails.js":"9","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Navbar.js":"10","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Loading.js":"11","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\axios.js":"12","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\GamesList.js":"13","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Stores.js":"14","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\ImageSlider.js":"15","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Gamemeta.js":"16","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\GameAbout.js":"17","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\ScreenshotsSlider.js":"18","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\GameDetailsCard.js":"19","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\TemporaryDrawer.js":"20","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Gamecard.js":"21"},{"size":478,"mtime":1611380775992,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1698,"mtime":1612404066135,"results":"25","hashOfConfig":"23"},{"size":507,"mtime":1612468961312,"results":"26","hashOfConfig":"23"},{"size":692,"mtime":1612407675224,"results":"27","hashOfConfig":"23"},{"size":2059,"mtime":1612480921834,"results":"28","hashOfConfig":"23"},{"size":2906,"mtime":1612480854619,"results":"29","hashOfConfig":"23"},{"size":1458,"mtime":1612468982153,"results":"30","hashOfConfig":"23"},{"size":5067,"mtime":1612413104612,"results":"31","hashOfConfig":"23"},{"size":6613,"mtime":1612458341000,"results":"32","hashOfConfig":"23"},{"size":458,"mtime":1612198441816,"results":"33","hashOfConfig":"23"},{"size":135,"mtime":1611193051910,"results":"34","hashOfConfig":"23"},{"size":2022,"mtime":1612491082548,"results":"35","hashOfConfig":"23"},{"size":1575,"mtime":1612047256300,"results":"36","hashOfConfig":"23"},{"size":4341,"mtime":1612415660668,"results":"37","hashOfConfig":"23"},{"size":3878,"mtime":1612047280782,"results":"38","hashOfConfig":"23"},{"size":1104,"mtime":1612234581303,"results":"39","hashOfConfig":"23"},{"size":2042,"mtime":1612415718423,"results":"40","hashOfConfig":"23"},{"size":2453,"mtime":1612045551159,"results":"41","hashOfConfig":"23"},{"size":2994,"mtime":1612458364783,"results":"42","hashOfConfig":"23"},{"size":6914,"mtime":1612469395568,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"42cgog",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\index.js",[],["91","92"],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\reportWebVitals.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\App.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\contexts\\GamesProvider.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\contexts\\AppProvider.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\MainPage.js",["93","94"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport ImageSLider from \"../components/ImageSlider\";\r\nimport GamesList from \"../components/GamesList\";\r\nimport { useGames } from \"../contexts/GamesProvider\";\r\nimport { useApp } from \"../contexts/AppProvider\";\r\nimport Loading from \"../components/Loading\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GAME_RAWG_API_KEY;\r\n\r\nfunction MainPage() {\r\n  const location = useLocation();\r\n  const currentLocation = location.pathname;\r\n  const { games, setGames, page, setPage } = useGames();\r\n  const [loading, setLoading] = useState(true);\r\n  const pageSize = 20;\r\n  const { screenWidth } = useApp();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      axios\r\n        .get(\"/games/lists/main\", {\r\n          params: {\r\n            ordering: \"-relevance\",\r\n            discover: true,\r\n            page_size: pageSize,\r\n            page,\r\n            key: API_KEY,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setGames((prev) => [...prev, ...res.data.results]);\r\n        })\r\n        .catch((error) => console.error(error))\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n    if (loading && page > 1) {\r\n      setPage(1);\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [page, setGames]);\r\n\r\n  useEffect(() => {\r\n    if (!currentLocation) return;\r\n\r\n    return () => {\r\n      setGames([]);\r\n    };\r\n  }, [currentLocation, setPage]);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div>\r\n      {screenWidth > 979 && (\r\n        <ImageSLider games={games.slice(0, 7)} key=\"ImageSlider\" />\r\n      )}\r\n      <div\r\n        style={{\r\n          margin: `${screenWidth > 979 ? \"1em 0 \" : \"4px 0\"}`,\r\n          padding: `${screenWidth > 979 ? \" 1em 0\" : \"4px 0 \"}`,\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <h2>Top trending games</h2>\r\n      </div>\r\n      <GamesList games={games} key=\"GamesList\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MainPage);\r\n","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\TrendingDate.js",["95"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useGames } from \"../contexts/GamesProvider\";\r\nimport GamesList from \"../components/GamesList\";\r\nimport axios from \"../axios\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction TrendingDate() {\r\n  const { time } = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const currentLocation = location.pathname;\r\n  const [limitDate, setLimitDate] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const pageSize = 20;\r\n  const { games, setGames, page, setPage } = useGames();\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const today = new Date();\r\n    let pastDate = new Date();\r\n    switch (time) {\r\n      case \"this-week\":\r\n        pastDate.setDate(today.getDate() - 7);\r\n        setLimitDate(`${formatDate(pastDate)},${formatDate(today)}`);\r\n        setTitle(\"Popular this week\");\r\n        break;\r\n      case \"last-month\":\r\n        pastDate.setDate(today.getDate() - 30);\r\n        setLimitDate(`${formatDate(pastDate)},${formatDate(today)}`);\r\n        setTitle(\"Popular last month\");\r\n        break;\r\n      case \"last-year\":\r\n        const lastYear = today.getFullYear() - 1;\r\n        setLimitDate(`${lastYear}-01-31,${lastYear}-12-31`);\r\n        setTitle(\"Popular last year\");\r\n        break;\r\n      default:\r\n        history.push(\"/\");\r\n        break;\r\n    }\r\n  }, [time, history]);\r\n\r\n  useEffect(() => {\r\n    function fetchData() {\r\n      if (limitDate) {\r\n        axios\r\n          .get(\"/games\", {\r\n            params: {\r\n              ordering: \"-relevance\",\r\n              page,\r\n              page_size: pageSize,\r\n              dates: limitDate,\r\n            },\r\n          })\r\n          .catch((error) => console.log(error))\r\n          .then((response) => {\r\n            setGames((prev) => [...prev, ...response.data.results]);\r\n          })\r\n          .finally(() => setLoading(false));\r\n      }\r\n    }\r\n    if (loading && page > 1) {\r\n      setPage(1);\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [limitDate, page, setGames]);\r\n\r\n  useEffect(() => {\r\n    if (!currentLocation) return;\r\n\r\n    return () => {\r\n      setGames([]);\r\n    };\r\n  }, [currentLocation, setGames, setPage]);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: \"center\", margin: \"8px 0\" }}>\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <GamesList games={games} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TrendingDate);\r\n","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\SearchGame.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\pages\\GameDetails.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Navbar.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Loading.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\axios.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\GamesList.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Stores.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\ImageSlider.js",["96"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Slider.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { FaXbox, FaWindows, FaPlaystation } from \"react-icons/fa\";\r\nimport { SiNintendoswitch } from \"react-icons/si\";\r\nimport { useGames } from \"../contexts/GamesProvider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectedThumb: {\r\n    background: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst ImageSlider = ({ games, screenshots }) => {\r\n  const { setGames, setPage } = useGames();\r\n  const [current, setCurrent] = useState(0);\r\n  const [sliderTimeout, setSliderTimeout] = useState(0);\r\n  const classes = useStyles();\r\n\r\n  const setInfiniteSliderTimeout = () => {\r\n    if (sliderTimeout) {\r\n      clearTimeout(sliderTimeout);\r\n    }\r\n    setSliderTimeout(\r\n      setTimeout(function () {\r\n        nextSlide();\r\n      }, 5000)\r\n    );\r\n  };\r\n\r\n  const nextSlide = useCallback(() => {\r\n    setCurrent(current === games.length - 1 ? 0 : current + 1);\r\n  }, [current, games.length]);\r\n\r\n  const prevSlide = useCallback(() => {\r\n    setCurrent(current === 0 ? games.length - 1 : current - 1);\r\n  }, [current, games.length]);\r\n\r\n  useEffect(() => {\r\n    setInfiniteSliderTimeout();\r\n    return () => {\r\n      setSliderTimeout(0);\r\n    };\r\n  }, [current]);\r\n\r\n  return (\r\n    <div className=\"slider\" key=\"slider\">\r\n      <div className=\"slider_wrapper\">\r\n        <IconButton color=\"secondary\" size=\"medium\" onClick={prevSlide}>\r\n          <ArrowBackIosIcon fontSize=\"large\" color=\"secondary\" />\r\n        </IconButton>\r\n\r\n        {games &&\r\n          games.map((game, index) => (\r\n            <Link\r\n              onClick={() => {\r\n                setGames([]);\r\n                setPage(1);\r\n              }}\r\n              to={`/games/${game.id}/${game.name}`}\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              key={`slider_image_${index}`}\r\n            >\r\n              <div\r\n                className={`slider_image_container ${\r\n                  index === current && \"active\"\r\n                } ${index !== current ? \"hide\" : \"\"}`}\r\n              >\r\n                <img\r\n                  className={`slider_image`}\r\n                  src={game.background_image}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"game_details_header\">\r\n                  <h2 className=\"game_title\" style={{ marginBottom: \"0.5em\" }}>\r\n                    {game.name}\r\n                  </h2>\r\n                  <div className=\"platforms_container\">\r\n                    {game.parent_platforms.map((platform, index) => {\r\n                      const platformToShow = platform.platform.name.toLowerCase();\r\n                      return (\r\n                        <div\r\n                          className=\"platform_image\"\r\n                          key={`slider_platform_image_${index}`}\r\n                        >\r\n                          {platformToShow === \"xbox\" && <FaXbox size={32} />}\r\n                          {platformToShow === \"pc\" && <FaWindows size={32} />}\r\n                          {platformToShow === \"playstation\" && (\r\n                            <FaPlaystation size={32} />\r\n                          )}\r\n                          {platformToShow === \"nintendo\" && (\r\n                            <SiNintendoswitch size={32} />\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        <IconButton color=\"secondary\" size=\"medium\" onClick={nextSlide}>\r\n          <ArrowForwardIosIcon fontSize=\"large\" color=\"secondary\" />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"slider_thumbs\">\r\n        {games.map((game, index) => (\r\n          <div\r\n            key={`slider_thumb_${index}`}\r\n            className={`slider_thumb ${\r\n              index === current && classes.selectedThumb\r\n            }`}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageSlider);\r\n","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Gamemeta.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\GameAbout.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\ScreenshotsSlider.js",["97"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport \"../css/Screenshots.css\";\r\n\r\nconst ScreenshotsSlider = ({ screenshots }) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [sliderTimeout, setSliderTimeout] = useState(0);\r\n\r\n  const nextSlide = useCallback(() => {\r\n    setCurrent(current === screenshots.length - 1 ? 0 : current + 1);\r\n  }, [current, screenshots.length]);\r\n\r\n  useEffect(() => {\r\n    const setInfiniteSliderTimeout = () => {\r\n      if (sliderTimeout) {\r\n        clearTimeout(sliderTimeout);\r\n      }\r\n      setSliderTimeout(\r\n        setTimeout(function () {\r\n          nextSlide();\r\n        }, 5000)\r\n      );\r\n    };\r\n    setInfiniteSliderTimeout();\r\n    return () => {\r\n      setSliderTimeout(0);\r\n    };\r\n  }, [current]);\r\n\r\n  return (\r\n    <div className=\"screenshot_slider\" key=\"slider\">\r\n      <div className=\"screenshot_slider_wrapper\">\r\n        {screenshots &&\r\n          screenshots.map((screenshot, index) => (\r\n            <div\r\n              className={`screenshot_slider_image_container ${\r\n                index === current && \"screenshot_active\"\r\n              } ${index !== current ? \"hide\" : \"\"}`}\r\n              key={index}\r\n            >\r\n              <div className=\"screenshot_holder\">\r\n                <img\r\n                  className={`screenshot_slider_image`}\r\n                  src={screenshot.image}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"screenshots_preview_container\">\r\n        {screenshots.map((screenshot, index) => (\r\n          <div\r\n            className={`screenshot_preview_wrapper ${\r\n              current === index ? \"selected\" : \"unselected\"\r\n            }`}\r\n            key={`screenshot_preview_${index}`}\r\n            onClick={() => setCurrent(index)}\r\n          >\r\n            <img key={index} src={screenshot.image} alt=\"\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ScreenshotsSlider);\r\n","C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\GameDetailsCard.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\TemporaryDrawer.js",[],"C:\\Users\\espkh\\Documents\\GitHub\\maze-search-game-app\\src\\components\\Gamecard.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":45,"column":6,"nodeType":"104","endLine":45,"endColumn":22,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":53,"column":6,"nodeType":"104","endLine":53,"endColumn":32,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"103","line":81,"column":6,"nodeType":"104","endLine":81,"endColumn":33,"suggestions":"108"},{"ruleId":"102","severity":1,"message":"109","line":48,"column":6,"nodeType":"104","endLine":48,"endColumn":15,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"111","line":27,"column":6,"nodeType":"104","endLine":27,"endColumn":15,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading' and 'setPage'. Either include them or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'setGames'. Either include it or remove the dependency array.",["116"],["117"],"React Hook useEffect has a missing dependency: 'setInfiniteSliderTimeout'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'nextSlide' and 'sliderTimeout'. Either include them or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [loading, page, setGames, setPage]",{"range":"130","text":"131"},"Update the dependencies array to be: [currentLocation, setGames, setPage]",{"range":"132","text":"133"},"Update the dependencies array to be: [limitDate, loading, page, setGames, setPage]",{"range":"134","text":"135"},"Update the dependencies array to be: [current, setInfiniteSliderTimeout]",{"range":"136","text":"137"},"Update the dependencies array to be: [current, nextSlide, sliderTimeout]",{"range":"138","text":"139"},[1346,1362],"[loading, page, setGames, setPage]",[1480,1506],"[currentLocation, setGames, setPage]",[2456,2483],"[limitDate, loading, page, setGames, setPage]",[1524,1533],"[current, setInfiniteSliderTimeout]",[765,774],"[current, nextSlide, sliderTimeout]"]